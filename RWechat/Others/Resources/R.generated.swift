//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 1 files.
  struct file {
    /// Resource file `Info.plist`.
    static let infoPlist = Rswift.FileResource(bundle: R.hostingBundle, name: "Info", pathExtension: "plist")
    
    /// `bundle.url(forResource: "Info", withExtension: "plist")`
    static func infoPlist(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.infoPlist
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 196 images.
  struct image {
    /// Image `ContactPanelHeaderBkg`.
    static let contactPanelHeaderBkg = Rswift.ImageResource(bundle: R.hostingBundle, name: "ContactPanelHeaderBkg")
    /// Image `Contact_Female`.
    static let contact_Female = Rswift.ImageResource(bundle: R.hostingBundle, name: "Contact_Female")
    /// Image `Contact_Male`.
    static let contact_Male = Rswift.ImageResource(bundle: R.hostingBundle, name: "Contact_Male")
    /// Image `Contact_SyncPhoneContacts_avatar`.
    static let contact_SyncPhoneContacts_avatar = Rswift.ImageResource(bundle: R.hostingBundle, name: "Contact_SyncPhoneContacts_avatar")
    /// Image `Contact_icon_ContactTag`.
    static let contact_icon_ContactTag = Rswift.ImageResource(bundle: R.hostingBundle, name: "Contact_icon_ContactTag")
    /// Image `Contactatargroupicon`.
    static let contactatargroupicon = Rswift.ImageResource(bundle: R.hostingBundle, name: "Contactatargroupicon")
    /// Image `ContactsPanelDotRect`.
    static let contactsPanelDotRect = Rswift.ImageResource(bundle: R.hostingBundle, name: "ContactsPanelDotRect")
    /// Image `LaunchImage-568h@2x-1`.
    static let launchImage568h2x1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "LaunchImage-568h@2x-1")
    /// Image `LaunchImage-700-Portrait`.
    static let launchImage700Portrait = Rswift.ImageResource(bundle: R.hostingBundle, name: "LaunchImage-700-Portrait")
    /// Image `LaunchImage-700`.
    static let launchImage700 = Rswift.ImageResource(bundle: R.hostingBundle, name: "LaunchImage-700")
    /// Image `LaunchImage-800-Portrait`.
    static let launchImage800Portrait = Rswift.ImageResource(bundle: R.hostingBundle, name: "LaunchImage-800-Portrait")
    /// Image `LaunchImage-800`.
    static let launchImage800 = Rswift.ImageResource(bundle: R.hostingBundle, name: "LaunchImage-800")
    /// Image `LaunchImage-Portrait`.
    static let launchImagePortrait = Rswift.ImageResource(bundle: R.hostingBundle, name: "LaunchImage-Portrait")
    /// Image `LaunchImage@2x-1`.
    static let launchImage2x1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "LaunchImage@2x-1")
    /// Image `LaunchImage`.
    static let launchImage = Rswift.ImageResource(bundle: R.hostingBundle, name: "LaunchImage")
    /// Image `MessageTooShort`.
    static let messageTooShort = Rswift.ImageResource(bundle: R.hostingBundle, name: "MessageTooShort")
    /// Image `MoreExpressionShops`.
    static let moreExpressionShops = Rswift.ImageResource(bundle: R.hostingBundle, name: "MoreExpressionShops")
    /// Image `MoreGame`.
    static let moreGame = Rswift.ImageResource(bundle: R.hostingBundle, name: "MoreGame")
    /// Image `MoreMyAlbum`.
    static let moreMyAlbum = Rswift.ImageResource(bundle: R.hostingBundle, name: "MoreMyAlbum")
    /// Image `MoreMyBankCard`.
    static let moreMyBankCard = Rswift.ImageResource(bundle: R.hostingBundle, name: "MoreMyBankCard")
    /// Image `MoreMyFavorites`.
    static let moreMyFavorites = Rswift.ImageResource(bundle: R.hostingBundle, name: "MoreMyFavorites")
    /// Image `MoreSetting`.
    static let moreSetting = Rswift.ImageResource(bundle: R.hostingBundle, name: "MoreSetting")
    /// Image `MyCardPackageIcon`.
    static let myCardPackageIcon = Rswift.ImageResource(bundle: R.hostingBundle, name: "MyCardPackageIcon")
    /// Image `MyQRCodeAction`.
    static let myQRCodeAction = Rswift.ImageResource(bundle: R.hostingBundle, name: "MyQRCodeAction")
    /// Image `ReceiverImageNodeBorder`.
    static let receiverImageNodeBorder = Rswift.ImageResource(bundle: R.hostingBundle, name: "ReceiverImageNodeBorder")
    /// Image `ReceiverImageNodeMask@2x副本`.
    static let receiverImageNodeMask2x副本 = Rswift.ImageResource(bundle: R.hostingBundle, name: "ReceiverImageNodeMask@2x副本")
    /// Image `ReceiverImageNodeMask`.
    static let receiverImageNodeMask = Rswift.ImageResource(bundle: R.hostingBundle, name: "ReceiverImageNodeMask")
    /// Image `ReceiverTextNodeBkgHL`.
    static let receiverTextNodeBkgHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ReceiverTextNodeBkgHL")
    /// Image `ReceiverTextNodeBkg`.
    static let receiverTextNodeBkg = Rswift.ImageResource(bundle: R.hostingBundle, name: "ReceiverTextNodeBkg")
    /// Image `ReceiverVoiceNodePlaying001`.
    static let receiverVoiceNodePlaying001 = Rswift.ImageResource(bundle: R.hostingBundle, name: "ReceiverVoiceNodePlaying001")
    /// Image `ReceiverVoiceNodePlaying002`.
    static let receiverVoiceNodePlaying002 = Rswift.ImageResource(bundle: R.hostingBundle, name: "ReceiverVoiceNodePlaying002")
    /// Image `ReceiverVoiceNodePlaying003`.
    static let receiverVoiceNodePlaying003 = Rswift.ImageResource(bundle: R.hostingBundle, name: "ReceiverVoiceNodePlaying003")
    /// Image `ReceiverVoiceNodePlaying`.
    static let receiverVoiceNodePlaying = Rswift.ImageResource(bundle: R.hostingBundle, name: "ReceiverVoiceNodePlaying")
    /// Image `RecordCancel`.
    static let recordCancel = Rswift.ImageResource(bundle: R.hostingBundle, name: "RecordCancel")
    /// Image `RecordingBkg`.
    static let recordingBkg = Rswift.ImageResource(bundle: R.hostingBundle, name: "RecordingBkg")
    /// Image `RecordingSignal001`.
    static let recordingSignal001 = Rswift.ImageResource(bundle: R.hostingBundle, name: "RecordingSignal001")
    /// Image `RecordingSignal002`.
    static let recordingSignal002 = Rswift.ImageResource(bundle: R.hostingBundle, name: "RecordingSignal002")
    /// Image `RecordingSignal003`.
    static let recordingSignal003 = Rswift.ImageResource(bundle: R.hostingBundle, name: "RecordingSignal003")
    /// Image `RecordingSignal004`.
    static let recordingSignal004 = Rswift.ImageResource(bundle: R.hostingBundle, name: "RecordingSignal004")
    /// Image `RecordingSignal005`.
    static let recordingSignal005 = Rswift.ImageResource(bundle: R.hostingBundle, name: "RecordingSignal005")
    /// Image `RecordingSignal006`.
    static let recordingSignal006 = Rswift.ImageResource(bundle: R.hostingBundle, name: "RecordingSignal006")
    /// Image `RecordingSignal007`.
    static let recordingSignal007 = Rswift.ImageResource(bundle: R.hostingBundle, name: "RecordingSignal007")
    /// Image `RecordingSignal008`.
    static let recordingSignal008 = Rswift.ImageResource(bundle: R.hostingBundle, name: "RecordingSignal008")
    /// Image `ScanBook_HL`.
    static let scanBook_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanBook_HL")
    /// Image `ScanBook`.
    static let scanBook = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanBook")
    /// Image `ScanBtombarBG`.
    static let scanBtombarBG = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanBtombarBG")
    /// Image `ScanDetailCellBgHL`.
    static let scanDetailCellBgHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailCellBgHL")
    /// Image `ScanDetailCellBgHeader`.
    static let scanDetailCellBgHeader = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailCellBgHeader")
    /// Image `ScanDetailCellBgLast`.
    static let scanDetailCellBgLast = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailCellBgLast")
    /// Image `ScanDetailCellBgWithArrowHL`.
    static let scanDetailCellBgWithArrowHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailCellBgWithArrowHL")
    /// Image `ScanDetailCellBgWithArrowLast`.
    static let scanDetailCellBgWithArrowLast = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailCellBgWithArrowLast")
    /// Image `ScanDetailCellBgWithArrow`.
    static let scanDetailCellBgWithArrow = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailCellBgWithArrow")
    /// Image `ScanDetailCellBg`.
    static let scanDetailCellBg = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailCellBg")
    /// Image `ScanDetailCertification`.
    static let scanDetailCertification = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailCertification")
    /// Image `ScanDetailDefaultRect`.
    static let scanDetailDefaultRect = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailDefaultRect")
    /// Image `ScanDetailDefaultSquare`.
    static let scanDetailDefaultSquare = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailDefaultSquare")
    /// Image `ScanDetailMediaPlayIconHL`.
    static let scanDetailMediaPlayIconHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailMediaPlayIconHL")
    /// Image `ScanDetailMediaPlayIcon`.
    static let scanDetailMediaPlayIcon = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailMediaPlayIcon")
    /// Image `ScanDetailMusicIcon_Hl`.
    static let scanDetailMusicIcon_Hl = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailMusicIcon_Hl")
    /// Image `ScanDetailMusicIcon`.
    static let scanDetailMusicIcon = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailMusicIcon")
    /// Image `ScanDetailMusicStopIcon_Hl`.
    static let scanDetailMusicStopIcon_Hl = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailMusicStopIcon_Hl")
    /// Image `ScanDetailMusicStopIcon`.
    static let scanDetailMusicStopIcon = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanDetailMusicStopIcon")
    /// Image `ScanQR1`.
    static let scanQR1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanQR1")
    /// Image `ScanQR2`.
    static let scanQR2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanQR2")
    /// Image `ScanQR3`.
    static let scanQR3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanQR3")
    /// Image `ScanQR4`.
    static let scanQR4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanQR4")
    /// Image `ScanQRCodeAction`.
    static let scanQRCodeAction = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanQRCodeAction")
    /// Image `ScanQRCode_HL`.
    static let scanQRCode_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanQRCode_HL")
    /// Image `ScanQRCode`.
    static let scanQRCode = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanQRCode")
    /// Image `ScanStreet_HL`.
    static let scanStreet_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanStreet_HL")
    /// Image `ScanStreet`.
    static let scanStreet = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanStreet")
    /// Image `ScanWord_HL`.
    static let scanWord_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanWord_HL")
    /// Image `ScanWord`.
    static let scanWord = Rswift.ImageResource(bundle: R.hostingBundle, name: "ScanWord")
    /// Image `Scantv_HL`.
    static let scantv_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "Scantv_HL")
    /// Image `Scantv`.
    static let scantv = Rswift.ImageResource(bundle: R.hostingBundle, name: "Scantv")
    /// Image `SenderImageNodeBorder`.
    static let senderImageNodeBorder = Rswift.ImageResource(bundle: R.hostingBundle, name: "SenderImageNodeBorder")
    /// Image `SenderTextNodeBkgHL`.
    static let senderTextNodeBkgHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "SenderTextNodeBkgHL")
    /// Image `SenderTextNodeBkg`.
    static let senderTextNodeBkg = Rswift.ImageResource(bundle: R.hostingBundle, name: "SenderTextNodeBkg")
    /// Image `SenderVoiceNodePlaying001`.
    static let senderVoiceNodePlaying001 = Rswift.ImageResource(bundle: R.hostingBundle, name: "SenderVoiceNodePlaying001")
    /// Image `SenderVoiceNodePlaying002`.
    static let senderVoiceNodePlaying002 = Rswift.ImageResource(bundle: R.hostingBundle, name: "SenderVoiceNodePlaying002")
    /// Image `SenderVoiceNodePlaying003`.
    static let senderVoiceNodePlaying003 = Rswift.ImageResource(bundle: R.hostingBundle, name: "SenderVoiceNodePlaying003")
    /// Image `SenderVoiceNodePlaying`.
    static let senderVoiceNodePlaying = Rswift.ImageResource(bundle: R.hostingBundle, name: "SenderVoiceNodePlaying")
    /// Image `ToolViewEmotionHL`.
    static let toolViewEmotionHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ToolViewEmotionHL")
    /// Image `ToolViewEmotion`.
    static let toolViewEmotion = Rswift.ImageResource(bundle: R.hostingBundle, name: "ToolViewEmotion")
    /// Image `ToolViewInputVoiceHL`.
    static let toolViewInputVoiceHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ToolViewInputVoiceHL")
    /// Image `ToolViewInputVoice`.
    static let toolViewInputVoice = Rswift.ImageResource(bundle: R.hostingBundle, name: "ToolViewInputVoice")
    /// Image `ToolViewKeyboardHL`.
    static let toolViewKeyboardHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "ToolViewKeyboardHL")
    /// Image `ToolViewKeyboard`.
    static let toolViewKeyboard = Rswift.ImageResource(bundle: R.hostingBundle, name: "ToolViewKeyboard")
    /// Image `TypeSelectorBtnHL_Black`.
    static let typeSelectorBtnHL_Black = Rswift.ImageResource(bundle: R.hostingBundle, name: "TypeSelectorBtnHL_Black")
    /// Image `TypeSelectorBtn_Black`.
    static let typeSelectorBtn_Black = Rswift.ImageResource(bundle: R.hostingBundle, name: "TypeSelectorBtn_Black")
    /// Image `add_friend_icon_addgroup`.
    static let add_friend_icon_addgroup = Rswift.ImageResource(bundle: R.hostingBundle, name: "add_friend_icon_addgroup")
    /// Image `add_friend_icon_contacts`.
    static let add_friend_icon_contacts = Rswift.ImageResource(bundle: R.hostingBundle, name: "add_friend_icon_contacts")
    /// Image `add_friend_icon_invite`.
    static let add_friend_icon_invite = Rswift.ImageResource(bundle: R.hostingBundle, name: "add_friend_icon_invite")
    /// Image `add_friend_icon_offical`.
    static let add_friend_icon_offical = Rswift.ImageResource(bundle: R.hostingBundle, name: "add_friend_icon_offical")
    /// Image `add_friend_icon_reda`.
    static let add_friend_icon_reda = Rswift.ImageResource(bundle: R.hostingBundle, name: "add_friend_icon_reda")
    /// Image `add_friend_icon_scanqr`.
    static let add_friend_icon_scanqr = Rswift.ImageResource(bundle: R.hostingBundle, name: "add_friend_icon_scanqr")
    /// Image `barbuttonicon_Camera_Golden`.
    static let barbuttonicon_Camera_Golden = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_Camera_Golden")
    /// Image `barbuttonicon_Camera`.
    static let barbuttonicon_Camera = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_Camera")
    /// Image `barbuttonicon_InfoMulti`.
    static let barbuttonicon_InfoMulti = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_InfoMulti")
    /// Image `barbuttonicon_InfoSingle`.
    static let barbuttonicon_InfoSingle = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_InfoSingle")
    /// Image `barbuttonicon_Luckymoney`.
    static let barbuttonicon_Luckymoney = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_Luckymoney")
    /// Image `barbuttonicon_Operate`.
    static let barbuttonicon_Operate = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_Operate")
    /// Image `barbuttonicon_add_cube`.
    static let barbuttonicon_add_cube = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_add_cube")
    /// Image `barbuttonicon_add`.
    static let barbuttonicon_add = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_add")
    /// Image `barbuttonicon_addfriends`.
    static let barbuttonicon_addfriends = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_addfriends")
    /// Image `barbuttonicon_back_cube`.
    static let barbuttonicon_back_cube = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_back_cube")
    /// Image `barbuttonicon_back`.
    static let barbuttonicon_back = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_back")
    /// Image `barbuttonicon_call`.
    static let barbuttonicon_call = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_call")
    /// Image `barbuttonicon_delete`.
    static let barbuttonicon_delete = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_delete")
    /// Image `barbuttonicon_mini_cube`.
    static let barbuttonicon_mini_cube = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_mini_cube")
    /// Image `barbuttonicon_more_black`.
    static let barbuttonicon_more_black = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_more_black")
    /// Image `barbuttonicon_more_cube`.
    static let barbuttonicon_more_cube = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_more_cube")
    /// Image `barbuttonicon_more`.
    static let barbuttonicon_more = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_more")
    /// Image `barbuttonicon_question`.
    static let barbuttonicon_question = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_question")
    /// Image `barbuttonicon_set`.
    static let barbuttonicon_set = Rswift.ImageResource(bundle: R.hostingBundle, name: "barbuttonicon_set")
    /// Image `c2cReceiverMsgNodeBG_HL`.
    static let c2cReceiverMsgNodeBG_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "c2cReceiverMsgNodeBG_HL")
    /// Image `c2cReceiverMsgNodeBG`.
    static let c2cReceiverMsgNodeBG = Rswift.ImageResource(bundle: R.hostingBundle, name: "c2cReceiverMsgNodeBG")
    /// Image `c2cSenderMsgNodeBG_HL`.
    static let c2cSenderMsgNodeBG_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "c2cSenderMsgNodeBG_HL")
    /// Image `c2cSenderMsgNodeBG`.
    static let c2cSenderMsgNodeBG = Rswift.ImageResource(bundle: R.hostingBundle, name: "c2cSenderMsgNodeBG")
    /// Image `chat_background`.
    static let chat_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "chat_background")
    /// Image `chathistory_detail_end`.
    static let chathistory_detail_end = Rswift.ImageResource(bundle: R.hostingBundle, name: "chathistory_detail_end")
    /// Image `compose_emotion_delete_highlighted`.
    static let compose_emotion_delete_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emotion_delete_highlighted")
    /// Image `contactflag_star_mark`.
    static let contactflag_star_mark = Rswift.ImageResource(bundle: R.hostingBundle, name: "contactflag_star_mark")
    /// Image `contacts_add_audiocall`.
    static let contacts_add_audiocall = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_audiocall")
    /// Image `contacts_add_bottle`.
    static let contacts_add_bottle = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_bottle")
    /// Image `contacts_add_facefriend`.
    static let contacts_add_facefriend = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_facefriend")
    /// Image `contacts_add_favourite`.
    static let contacts_add_favourite = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_favourite")
    /// Image `contacts_add_friend`.
    static let contacts_add_friend = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_friend")
    /// Image `contacts_add_game`.
    static let contacts_add_game = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_game")
    /// Image `contacts_add_groupmessage`.
    static let contacts_add_groupmessage = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_groupmessage")
    /// Image `contacts_add_moment`.
    static let contacts_add_moment = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_moment")
    /// Image `contacts_add_myablum`.
    static let contacts_add_myablum = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_myablum")
    /// Image `contacts_add_mycard`.
    static let contacts_add_mycard = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_mycard")
    /// Image `contacts_add_myqrcode`.
    static let contacts_add_myqrcode = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_myqrcode")
    /// Image `contacts_add_nearby`.
    static let contacts_add_nearby = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_nearby")
    /// Image `contacts_add_newmessage`.
    static let contacts_add_newmessage = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_newmessage")
    /// Image `contacts_add_photo`.
    static let contacts_add_photo = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_photo")
    /// Image `contacts_add_radar`.
    static let contacts_add_radar = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_radar")
    /// Image `contacts_add_scan`.
    static let contacts_add_scan = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_scan")
    /// Image `contacts_add_shake`.
    static let contacts_add_shake = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_shake")
    /// Image `contacts_add_sticker`.
    static let contacts_add_sticker = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_sticker")
    /// Image `contacts_add_voip`.
    static let contacts_add_voip = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_voip")
    /// Image `contacts_add_webwechat`.
    static let contacts_add_webwechat = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_webwechat")
    /// Image `contacts_add_wechatout`.
    static let contacts_add_wechatout = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_add_wechatout")
    /// Image `contacts_audiocall`.
    static let contacts_audiocall = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_audiocall")
    /// Image `contacts_helloword`.
    static let contacts_helloword = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_helloword")
    /// Image `contacts_home_icon`.
    static let contacts_home_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_home_icon")
    /// Image `contacts_sectionHeaderBkg`.
    static let contacts_sectionHeaderBkg = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_sectionHeaderBkg")
    /// Image `contacts_signature_background`.
    static let contacts_signature_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_signature_background")
    /// Image `contacts_videocall`.
    static let contacts_videocall = Rswift.ImageResource(bundle: R.hostingBundle, name: "contacts_videocall")
    /// Image `dice_Action_0`.
    static let dice_Action_0 = Rswift.ImageResource(bundle: R.hostingBundle, name: "dice_Action_0")
    /// Image `dice_Action_1`.
    static let dice_Action_1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "dice_Action_1")
    /// Image `dice_Action_2`.
    static let dice_Action_2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "dice_Action_2")
    /// Image `dice_Action_3`.
    static let dice_Action_3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "dice_Action_3")
    /// Image `emoticon_keyboard_magnifier`.
    static let emoticon_keyboard_magnifier = Rswift.ImageResource(bundle: R.hostingBundle, name: "emoticon_keyboard_magnifier")
    /// Image `ff_IconBottle`.
    static let ff_IconBottle = Rswift.ImageResource(bundle: R.hostingBundle, name: "ff_IconBottle")
    /// Image `ff_IconGroup`.
    static let ff_IconGroup = Rswift.ImageResource(bundle: R.hostingBundle, name: "ff_IconGroup")
    /// Image `ff_IconLocationService`.
    static let ff_IconLocationService = Rswift.ImageResource(bundle: R.hostingBundle, name: "ff_IconLocationService")
    /// Image `ff_IconQRCode`.
    static let ff_IconQRCode = Rswift.ImageResource(bundle: R.hostingBundle, name: "ff_IconQRCode")
    /// Image `ff_IconShake`.
    static let ff_IconShake = Rswift.ImageResource(bundle: R.hostingBundle, name: "ff_IconShake")
    /// Image `ff_IconShowAlbum`.
    static let ff_IconShowAlbum = Rswift.ImageResource(bundle: R.hostingBundle, name: "ff_IconShowAlbum")
    /// Image `icon_avatar`.
    static let icon_avatar = Rswift.ImageResource(bundle: R.hostingBundle, name: "icon_avatar")
    /// Image `plugins_FriendNotify`.
    static let plugins_FriendNotify = Rswift.ImageResource(bundle: R.hostingBundle, name: "plugins_FriendNotify")
    /// Image `receipt_payment_icon`.
    static let receipt_payment_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "receipt_payment_icon")
    /// Image `sharemorePay`.
    static let sharemorePay = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemorePay")
    /// Image `sharemore_action_HL`.
    static let sharemore_action_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_action_HL")
    /// Image `sharemore_action`.
    static let sharemore_action = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_action")
    /// Image `sharemore_friendcard`.
    static let sharemore_friendcard = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_friendcard")
    /// Image `sharemore_fromapp_HL`.
    static let sharemore_fromapp_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_fromapp_HL")
    /// Image `sharemore_fromapp`.
    static let sharemore_fromapp = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_fromapp")
    /// Image `sharemore_location`.
    static let sharemore_location = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_location")
    /// Image `sharemore_multitalk`.
    static let sharemore_multitalk = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_multitalk")
    /// Image `sharemore_myaction_HL`.
    static let sharemore_myaction_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_myaction_HL")
    /// Image `sharemore_myaction`.
    static let sharemore_myaction = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_myaction")
    /// Image `sharemore_myfav`.
    static let sharemore_myfav = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_myfav")
    /// Image `sharemore_other_HL`.
    static let sharemore_other_HL = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_other_HL")
    /// Image `sharemore_other`.
    static let sharemore_other = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_other")
    /// Image `sharemore_pic`.
    static let sharemore_pic = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_pic")
    /// Image `sharemore_picbg`.
    static let sharemore_picbg = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_picbg")
    /// Image `sharemore_service`.
    static let sharemore_service = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_service")
    /// Image `sharemore_sight`.
    static let sharemore_sight = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_sight")
    /// Image `sharemore_video`.
    static let sharemore_video = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_video")
    /// Image `sharemore_videovoip`.
    static let sharemore_videovoip = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_videovoip")
    /// Image `sharemore_voiceinput`.
    static let sharemore_voiceinput = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_voiceinput")
    /// Image `sharemore_voipvoice`.
    static let sharemore_voipvoice = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_voipvoice")
    /// Image `sharemore_wallet`.
    static let sharemore_wallet = Rswift.ImageResource(bundle: R.hostingBundle, name: "sharemore_wallet")
    /// Image `tabbarBkg`.
    static let tabbarBkg = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbarBkg")
    /// Image `tabbar_badge`.
    static let tabbar_badge = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_badge")
    /// Image `tabbar_contactsHL`.
    static let tabbar_contactsHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_contactsHL")
    /// Image `tabbar_contacts`.
    static let tabbar_contacts = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_contacts")
    /// Image `tabbar_discoverHL`.
    static let tabbar_discoverHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_discoverHL")
    /// Image `tabbar_discover`.
    static let tabbar_discover = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_discover")
    /// Image `tabbar_mainframeHL`.
    static let tabbar_mainframeHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_mainframeHL")
    /// Image `tabbar_mainframe`.
    static let tabbar_mainframe = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_mainframe")
    /// Image `tabbar_meHL`.
    static let tabbar_meHL = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_meHL")
    /// Image `tabbar_me`.
    static let tabbar_me = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_me")
    
    /// `UIImage(named: "ContactPanelHeaderBkg", bundle: ..., traitCollection: ...)`
    static func contactPanelHeaderBkg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contactPanelHeaderBkg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "Contact_Female", bundle: ..., traitCollection: ...)`
    static func contact_Female(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contact_Female, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "Contact_Male", bundle: ..., traitCollection: ...)`
    static func contact_Male(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contact_Male, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "Contact_SyncPhoneContacts_avatar", bundle: ..., traitCollection: ...)`
    static func contact_SyncPhoneContacts_avatar(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contact_SyncPhoneContacts_avatar, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "Contact_icon_ContactTag", bundle: ..., traitCollection: ...)`
    static func contact_icon_ContactTag(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contact_icon_ContactTag, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "Contactatargroupicon", bundle: ..., traitCollection: ...)`
    static func contactatargroupicon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contactatargroupicon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ContactsPanelDotRect", bundle: ..., traitCollection: ...)`
    static func contactsPanelDotRect(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contactsPanelDotRect, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "LaunchImage", bundle: ..., traitCollection: ...)`
    static func launchImage(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.launchImage, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "LaunchImage-568h@2x-1", bundle: ..., traitCollection: ...)`
    static func launchImage568h2x1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.launchImage568h2x1, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "LaunchImage-700", bundle: ..., traitCollection: ...)`
    static func launchImage700(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.launchImage700, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "LaunchImage-700-Portrait", bundle: ..., traitCollection: ...)`
    static func launchImage700Portrait(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.launchImage700Portrait, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "LaunchImage-800", bundle: ..., traitCollection: ...)`
    static func launchImage800(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.launchImage800, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "LaunchImage-800-Portrait", bundle: ..., traitCollection: ...)`
    static func launchImage800Portrait(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.launchImage800Portrait, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "LaunchImage-Portrait", bundle: ..., traitCollection: ...)`
    static func launchImagePortrait(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.launchImagePortrait, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "LaunchImage@2x-1", bundle: ..., traitCollection: ...)`
    static func launchImage2x1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.launchImage2x1, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MessageTooShort", bundle: ..., traitCollection: ...)`
    static func messageTooShort(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.messageTooShort, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MoreExpressionShops", bundle: ..., traitCollection: ...)`
    static func moreExpressionShops(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.moreExpressionShops, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MoreGame", bundle: ..., traitCollection: ...)`
    static func moreGame(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.moreGame, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MoreMyAlbum", bundle: ..., traitCollection: ...)`
    static func moreMyAlbum(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.moreMyAlbum, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MoreMyBankCard", bundle: ..., traitCollection: ...)`
    static func moreMyBankCard(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.moreMyBankCard, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MoreMyFavorites", bundle: ..., traitCollection: ...)`
    static func moreMyFavorites(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.moreMyFavorites, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MoreSetting", bundle: ..., traitCollection: ...)`
    static func moreSetting(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.moreSetting, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MyCardPackageIcon", bundle: ..., traitCollection: ...)`
    static func myCardPackageIcon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.myCardPackageIcon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "MyQRCodeAction", bundle: ..., traitCollection: ...)`
    static func myQRCodeAction(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.myQRCodeAction, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ReceiverImageNodeBorder", bundle: ..., traitCollection: ...)`
    static func receiverImageNodeBorder(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.receiverImageNodeBorder, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ReceiverImageNodeMask", bundle: ..., traitCollection: ...)`
    static func receiverImageNodeMask(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.receiverImageNodeMask, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ReceiverImageNodeMask@2x副本", bundle: ..., traitCollection: ...)`
    static func receiverImageNodeMask2x副本(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.receiverImageNodeMask2x副本, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ReceiverTextNodeBkg", bundle: ..., traitCollection: ...)`
    static func receiverTextNodeBkg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.receiverTextNodeBkg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ReceiverTextNodeBkgHL", bundle: ..., traitCollection: ...)`
    static func receiverTextNodeBkgHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.receiverTextNodeBkgHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ReceiverVoiceNodePlaying", bundle: ..., traitCollection: ...)`
    static func receiverVoiceNodePlaying(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.receiverVoiceNodePlaying, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ReceiverVoiceNodePlaying001", bundle: ..., traitCollection: ...)`
    static func receiverVoiceNodePlaying001(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.receiverVoiceNodePlaying001, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ReceiverVoiceNodePlaying002", bundle: ..., traitCollection: ...)`
    static func receiverVoiceNodePlaying002(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.receiverVoiceNodePlaying002, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ReceiverVoiceNodePlaying003", bundle: ..., traitCollection: ...)`
    static func receiverVoiceNodePlaying003(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.receiverVoiceNodePlaying003, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "RecordCancel", bundle: ..., traitCollection: ...)`
    static func recordCancel(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.recordCancel, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "RecordingBkg", bundle: ..., traitCollection: ...)`
    static func recordingBkg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.recordingBkg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "RecordingSignal001", bundle: ..., traitCollection: ...)`
    static func recordingSignal001(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.recordingSignal001, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "RecordingSignal002", bundle: ..., traitCollection: ...)`
    static func recordingSignal002(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.recordingSignal002, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "RecordingSignal003", bundle: ..., traitCollection: ...)`
    static func recordingSignal003(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.recordingSignal003, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "RecordingSignal004", bundle: ..., traitCollection: ...)`
    static func recordingSignal004(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.recordingSignal004, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "RecordingSignal005", bundle: ..., traitCollection: ...)`
    static func recordingSignal005(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.recordingSignal005, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "RecordingSignal006", bundle: ..., traitCollection: ...)`
    static func recordingSignal006(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.recordingSignal006, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "RecordingSignal007", bundle: ..., traitCollection: ...)`
    static func recordingSignal007(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.recordingSignal007, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "RecordingSignal008", bundle: ..., traitCollection: ...)`
    static func recordingSignal008(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.recordingSignal008, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanBook", bundle: ..., traitCollection: ...)`
    static func scanBook(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanBook, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanBook_HL", bundle: ..., traitCollection: ...)`
    static func scanBook_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanBook_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanBtombarBG", bundle: ..., traitCollection: ...)`
    static func scanBtombarBG(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanBtombarBG, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailCellBg", bundle: ..., traitCollection: ...)`
    static func scanDetailCellBg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailCellBg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailCellBgHL", bundle: ..., traitCollection: ...)`
    static func scanDetailCellBgHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailCellBgHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailCellBgHeader", bundle: ..., traitCollection: ...)`
    static func scanDetailCellBgHeader(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailCellBgHeader, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailCellBgLast", bundle: ..., traitCollection: ...)`
    static func scanDetailCellBgLast(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailCellBgLast, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailCellBgWithArrow", bundle: ..., traitCollection: ...)`
    static func scanDetailCellBgWithArrow(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailCellBgWithArrow, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailCellBgWithArrowHL", bundle: ..., traitCollection: ...)`
    static func scanDetailCellBgWithArrowHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailCellBgWithArrowHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailCellBgWithArrowLast", bundle: ..., traitCollection: ...)`
    static func scanDetailCellBgWithArrowLast(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailCellBgWithArrowLast, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailCertification", bundle: ..., traitCollection: ...)`
    static func scanDetailCertification(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailCertification, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailDefaultRect", bundle: ..., traitCollection: ...)`
    static func scanDetailDefaultRect(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailDefaultRect, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailDefaultSquare", bundle: ..., traitCollection: ...)`
    static func scanDetailDefaultSquare(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailDefaultSquare, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailMediaPlayIcon", bundle: ..., traitCollection: ...)`
    static func scanDetailMediaPlayIcon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailMediaPlayIcon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailMediaPlayIconHL", bundle: ..., traitCollection: ...)`
    static func scanDetailMediaPlayIconHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailMediaPlayIconHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailMusicIcon", bundle: ..., traitCollection: ...)`
    static func scanDetailMusicIcon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailMusicIcon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailMusicIcon_Hl", bundle: ..., traitCollection: ...)`
    static func scanDetailMusicIcon_Hl(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailMusicIcon_Hl, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailMusicStopIcon", bundle: ..., traitCollection: ...)`
    static func scanDetailMusicStopIcon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailMusicStopIcon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanDetailMusicStopIcon_Hl", bundle: ..., traitCollection: ...)`
    static func scanDetailMusicStopIcon_Hl(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanDetailMusicStopIcon_Hl, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanQR1", bundle: ..., traitCollection: ...)`
    static func scanQR1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanQR1, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanQR2", bundle: ..., traitCollection: ...)`
    static func scanQR2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanQR2, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanQR3", bundle: ..., traitCollection: ...)`
    static func scanQR3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanQR3, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanQR4", bundle: ..., traitCollection: ...)`
    static func scanQR4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanQR4, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanQRCode", bundle: ..., traitCollection: ...)`
    static func scanQRCode(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanQRCode, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanQRCodeAction", bundle: ..., traitCollection: ...)`
    static func scanQRCodeAction(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanQRCodeAction, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanQRCode_HL", bundle: ..., traitCollection: ...)`
    static func scanQRCode_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanQRCode_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanStreet", bundle: ..., traitCollection: ...)`
    static func scanStreet(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanStreet, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanStreet_HL", bundle: ..., traitCollection: ...)`
    static func scanStreet_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanStreet_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanWord", bundle: ..., traitCollection: ...)`
    static func scanWord(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanWord, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ScanWord_HL", bundle: ..., traitCollection: ...)`
    static func scanWord_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scanWord_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "Scantv", bundle: ..., traitCollection: ...)`
    static func scantv(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scantv, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "Scantv_HL", bundle: ..., traitCollection: ...)`
    static func scantv_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.scantv_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "SenderImageNodeBorder", bundle: ..., traitCollection: ...)`
    static func senderImageNodeBorder(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.senderImageNodeBorder, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "SenderTextNodeBkg", bundle: ..., traitCollection: ...)`
    static func senderTextNodeBkg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.senderTextNodeBkg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "SenderTextNodeBkgHL", bundle: ..., traitCollection: ...)`
    static func senderTextNodeBkgHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.senderTextNodeBkgHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "SenderVoiceNodePlaying", bundle: ..., traitCollection: ...)`
    static func senderVoiceNodePlaying(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.senderVoiceNodePlaying, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "SenderVoiceNodePlaying001", bundle: ..., traitCollection: ...)`
    static func senderVoiceNodePlaying001(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.senderVoiceNodePlaying001, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "SenderVoiceNodePlaying002", bundle: ..., traitCollection: ...)`
    static func senderVoiceNodePlaying002(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.senderVoiceNodePlaying002, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "SenderVoiceNodePlaying003", bundle: ..., traitCollection: ...)`
    static func senderVoiceNodePlaying003(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.senderVoiceNodePlaying003, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ToolViewEmotion", bundle: ..., traitCollection: ...)`
    static func toolViewEmotion(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.toolViewEmotion, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ToolViewEmotionHL", bundle: ..., traitCollection: ...)`
    static func toolViewEmotionHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.toolViewEmotionHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ToolViewInputVoice", bundle: ..., traitCollection: ...)`
    static func toolViewInputVoice(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.toolViewInputVoice, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ToolViewInputVoiceHL", bundle: ..., traitCollection: ...)`
    static func toolViewInputVoiceHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.toolViewInputVoiceHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ToolViewKeyboard", bundle: ..., traitCollection: ...)`
    static func toolViewKeyboard(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.toolViewKeyboard, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ToolViewKeyboardHL", bundle: ..., traitCollection: ...)`
    static func toolViewKeyboardHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.toolViewKeyboardHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "TypeSelectorBtnHL_Black", bundle: ..., traitCollection: ...)`
    static func typeSelectorBtnHL_Black(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.typeSelectorBtnHL_Black, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "TypeSelectorBtn_Black", bundle: ..., traitCollection: ...)`
    static func typeSelectorBtn_Black(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.typeSelectorBtn_Black, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "add_friend_icon_addgroup", bundle: ..., traitCollection: ...)`
    static func add_friend_icon_addgroup(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.add_friend_icon_addgroup, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "add_friend_icon_contacts", bundle: ..., traitCollection: ...)`
    static func add_friend_icon_contacts(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.add_friend_icon_contacts, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "add_friend_icon_invite", bundle: ..., traitCollection: ...)`
    static func add_friend_icon_invite(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.add_friend_icon_invite, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "add_friend_icon_offical", bundle: ..., traitCollection: ...)`
    static func add_friend_icon_offical(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.add_friend_icon_offical, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "add_friend_icon_reda", bundle: ..., traitCollection: ...)`
    static func add_friend_icon_reda(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.add_friend_icon_reda, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "add_friend_icon_scanqr", bundle: ..., traitCollection: ...)`
    static func add_friend_icon_scanqr(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.add_friend_icon_scanqr, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_Camera", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_Camera(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_Camera, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_Camera_Golden", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_Camera_Golden(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_Camera_Golden, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_InfoMulti", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_InfoMulti(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_InfoMulti, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_InfoSingle", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_InfoSingle(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_InfoSingle, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_Luckymoney", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_Luckymoney(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_Luckymoney, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_Operate", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_Operate(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_Operate, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_add", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_add(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_add, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_add_cube", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_add_cube(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_add_cube, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_addfriends", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_addfriends(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_addfriends, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_back", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_back(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_back, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_back_cube", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_back_cube(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_back_cube, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_call", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_call(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_call, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_delete", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_delete(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_delete, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_mini_cube", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_mini_cube(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_mini_cube, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_more", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_more(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_more, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_more_black", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_more_black(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_more_black, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_more_cube", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_more_cube(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_more_cube, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_question", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_question(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_question, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "barbuttonicon_set", bundle: ..., traitCollection: ...)`
    static func barbuttonicon_set(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.barbuttonicon_set, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "c2cReceiverMsgNodeBG", bundle: ..., traitCollection: ...)`
    static func c2cReceiverMsgNodeBG(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.c2cReceiverMsgNodeBG, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "c2cReceiverMsgNodeBG_HL", bundle: ..., traitCollection: ...)`
    static func c2cReceiverMsgNodeBG_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.c2cReceiverMsgNodeBG_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "c2cSenderMsgNodeBG", bundle: ..., traitCollection: ...)`
    static func c2cSenderMsgNodeBG(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.c2cSenderMsgNodeBG, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "c2cSenderMsgNodeBG_HL", bundle: ..., traitCollection: ...)`
    static func c2cSenderMsgNodeBG_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.c2cSenderMsgNodeBG_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "chat_background", bundle: ..., traitCollection: ...)`
    static func chat_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.chat_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "chathistory_detail_end", bundle: ..., traitCollection: ...)`
    static func chathistory_detail_end(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.chathistory_detail_end, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emotion_delete_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_emotion_delete_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emotion_delete_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contactflag_star_mark", bundle: ..., traitCollection: ...)`
    static func contactflag_star_mark(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contactflag_star_mark, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_audiocall", bundle: ..., traitCollection: ...)`
    static func contacts_add_audiocall(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_audiocall, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_bottle", bundle: ..., traitCollection: ...)`
    static func contacts_add_bottle(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_bottle, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_facefriend", bundle: ..., traitCollection: ...)`
    static func contacts_add_facefriend(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_facefriend, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_favourite", bundle: ..., traitCollection: ...)`
    static func contacts_add_favourite(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_favourite, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_friend", bundle: ..., traitCollection: ...)`
    static func contacts_add_friend(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_friend, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_game", bundle: ..., traitCollection: ...)`
    static func contacts_add_game(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_game, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_groupmessage", bundle: ..., traitCollection: ...)`
    static func contacts_add_groupmessage(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_groupmessage, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_moment", bundle: ..., traitCollection: ...)`
    static func contacts_add_moment(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_moment, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_myablum", bundle: ..., traitCollection: ...)`
    static func contacts_add_myablum(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_myablum, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_mycard", bundle: ..., traitCollection: ...)`
    static func contacts_add_mycard(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_mycard, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_myqrcode", bundle: ..., traitCollection: ...)`
    static func contacts_add_myqrcode(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_myqrcode, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_nearby", bundle: ..., traitCollection: ...)`
    static func contacts_add_nearby(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_nearby, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_newmessage", bundle: ..., traitCollection: ...)`
    static func contacts_add_newmessage(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_newmessage, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_photo", bundle: ..., traitCollection: ...)`
    static func contacts_add_photo(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_photo, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_radar", bundle: ..., traitCollection: ...)`
    static func contacts_add_radar(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_radar, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_scan", bundle: ..., traitCollection: ...)`
    static func contacts_add_scan(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_scan, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_shake", bundle: ..., traitCollection: ...)`
    static func contacts_add_shake(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_shake, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_sticker", bundle: ..., traitCollection: ...)`
    static func contacts_add_sticker(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_sticker, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_voip", bundle: ..., traitCollection: ...)`
    static func contacts_add_voip(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_voip, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_webwechat", bundle: ..., traitCollection: ...)`
    static func contacts_add_webwechat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_webwechat, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_add_wechatout", bundle: ..., traitCollection: ...)`
    static func contacts_add_wechatout(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_add_wechatout, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_audiocall", bundle: ..., traitCollection: ...)`
    static func contacts_audiocall(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_audiocall, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_helloword", bundle: ..., traitCollection: ...)`
    static func contacts_helloword(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_helloword, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_home_icon", bundle: ..., traitCollection: ...)`
    static func contacts_home_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_home_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_sectionHeaderBkg", bundle: ..., traitCollection: ...)`
    static func contacts_sectionHeaderBkg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_sectionHeaderBkg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_signature_background", bundle: ..., traitCollection: ...)`
    static func contacts_signature_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_signature_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "contacts_videocall", bundle: ..., traitCollection: ...)`
    static func contacts_videocall(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.contacts_videocall, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "dice_Action_0", bundle: ..., traitCollection: ...)`
    static func dice_Action_0(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.dice_Action_0, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "dice_Action_1", bundle: ..., traitCollection: ...)`
    static func dice_Action_1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.dice_Action_1, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "dice_Action_2", bundle: ..., traitCollection: ...)`
    static func dice_Action_2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.dice_Action_2, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "dice_Action_3", bundle: ..., traitCollection: ...)`
    static func dice_Action_3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.dice_Action_3, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "emoticon_keyboard_magnifier", bundle: ..., traitCollection: ...)`
    static func emoticon_keyboard_magnifier(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.emoticon_keyboard_magnifier, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ff_IconBottle", bundle: ..., traitCollection: ...)`
    static func ff_IconBottle(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ff_IconBottle, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ff_IconGroup", bundle: ..., traitCollection: ...)`
    static func ff_IconGroup(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ff_IconGroup, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ff_IconLocationService", bundle: ..., traitCollection: ...)`
    static func ff_IconLocationService(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ff_IconLocationService, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ff_IconQRCode", bundle: ..., traitCollection: ...)`
    static func ff_IconQRCode(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ff_IconQRCode, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ff_IconShake", bundle: ..., traitCollection: ...)`
    static func ff_IconShake(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ff_IconShake, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ff_IconShowAlbum", bundle: ..., traitCollection: ...)`
    static func ff_IconShowAlbum(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ff_IconShowAlbum, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "icon_avatar", bundle: ..., traitCollection: ...)`
    static func icon_avatar(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.icon_avatar, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "plugins_FriendNotify", bundle: ..., traitCollection: ...)`
    static func plugins_FriendNotify(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.plugins_FriendNotify, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "receipt_payment_icon", bundle: ..., traitCollection: ...)`
    static func receipt_payment_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.receipt_payment_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemorePay", bundle: ..., traitCollection: ...)`
    static func sharemorePay(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemorePay, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_action", bundle: ..., traitCollection: ...)`
    static func sharemore_action(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_action, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_action_HL", bundle: ..., traitCollection: ...)`
    static func sharemore_action_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_action_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_friendcard", bundle: ..., traitCollection: ...)`
    static func sharemore_friendcard(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_friendcard, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_fromapp", bundle: ..., traitCollection: ...)`
    static func sharemore_fromapp(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_fromapp, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_fromapp_HL", bundle: ..., traitCollection: ...)`
    static func sharemore_fromapp_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_fromapp_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_location", bundle: ..., traitCollection: ...)`
    static func sharemore_location(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_location, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_multitalk", bundle: ..., traitCollection: ...)`
    static func sharemore_multitalk(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_multitalk, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_myaction", bundle: ..., traitCollection: ...)`
    static func sharemore_myaction(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_myaction, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_myaction_HL", bundle: ..., traitCollection: ...)`
    static func sharemore_myaction_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_myaction_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_myfav", bundle: ..., traitCollection: ...)`
    static func sharemore_myfav(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_myfav, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_other", bundle: ..., traitCollection: ...)`
    static func sharemore_other(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_other, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_other_HL", bundle: ..., traitCollection: ...)`
    static func sharemore_other_HL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_other_HL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_pic", bundle: ..., traitCollection: ...)`
    static func sharemore_pic(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_pic, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_picbg", bundle: ..., traitCollection: ...)`
    static func sharemore_picbg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_picbg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_service", bundle: ..., traitCollection: ...)`
    static func sharemore_service(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_service, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_sight", bundle: ..., traitCollection: ...)`
    static func sharemore_sight(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_sight, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_video", bundle: ..., traitCollection: ...)`
    static func sharemore_video(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_video, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_videovoip", bundle: ..., traitCollection: ...)`
    static func sharemore_videovoip(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_videovoip, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_voiceinput", bundle: ..., traitCollection: ...)`
    static func sharemore_voiceinput(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_voiceinput, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_voipvoice", bundle: ..., traitCollection: ...)`
    static func sharemore_voipvoice(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_voipvoice, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "sharemore_wallet", bundle: ..., traitCollection: ...)`
    static func sharemore_wallet(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharemore_wallet, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbarBkg", bundle: ..., traitCollection: ...)`
    static func tabbarBkg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbarBkg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_badge", bundle: ..., traitCollection: ...)`
    static func tabbar_badge(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_badge, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_contacts", bundle: ..., traitCollection: ...)`
    static func tabbar_contacts(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_contacts, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_contactsHL", bundle: ..., traitCollection: ...)`
    static func tabbar_contactsHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_contactsHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_discover", bundle: ..., traitCollection: ...)`
    static func tabbar_discover(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_discover, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_discoverHL", bundle: ..., traitCollection: ...)`
    static func tabbar_discoverHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_discoverHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_mainframe", bundle: ..., traitCollection: ...)`
    static func tabbar_mainframe(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_mainframe, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_mainframeHL", bundle: ..., traitCollection: ...)`
    static func tabbar_mainframeHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_mainframeHL, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_me", bundle: ..., traitCollection: ...)`
    static func tabbar_me(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_me, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_meHL", bundle: ..., traitCollection: ...)`
    static func tabbar_meHL(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_meHL, compatibleWith: traitCollection)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 0 reuse identifiers.
  struct reuseIdentifier {
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 0 localization tables.
  struct string {
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      // There are no resources to validate
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R {
  struct nib {
    fileprivate init() {}
  }
  
  struct storyboard {
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "LaunchScreen"
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
